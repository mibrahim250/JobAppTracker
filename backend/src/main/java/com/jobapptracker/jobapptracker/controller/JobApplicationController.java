package com.jobapptracker.jobapptracker.controller;

import com.jobapptracker.jobapptracker.model.JobApplication;
import com.jobapptracker.jobapptracker.service.JobApplicationService;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.net.URI;
import java.util.List;

@RestController
@RequestMapping("/api/jobs")
@CrossOrigin(origins = "http://localhost:3000")
public class JobApplicationController {

    private final JobApplicationService service;

    public JobApplicationController(JobApplicationService service) {
        this.service = service;
    }

    // GET /api/jobs
    @GetMapping
    public List<JobApplication> all() {
        return service.getAll();
    }

    // GET /api/jobs/{id}
    @GetMapping("/{id}")
    public ResponseEntity<JobApplication> one(@PathVariable Long id) {
        JobApplication found = service.getById(id);
        return (found == null) ? ResponseEntity.notFound().build() : ResponseEntity.ok(found);
    }

    // POST /api/jobs  (VALIDATED)
    @PostMapping
    public ResponseEntity<JobApplication> create(@RequestBody @Valid JobApplication app) {
        JobApplication saved = service.add(app);                 // id generated by DB
        return ResponseEntity.created(URI.create("/api/jobs/" + saved.getId()))
                .body(saved);
    }

    // PUT /api/jobs/{id}  (VALIDATED)
    @PutMapping("/{id}")
    public ResponseEntity<JobApplication> update(@PathVariable Long id, @RequestBody @Valid JobApplication app) {
        JobApplication updated = service.update(id, app);
        return (updated == null) ? ResponseEntity.notFound().build() : ResponseEntity.ok(updated);
    }

    // DELETE /api/jobs/{id}
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> delete(@PathVariable Long id) {
        service.delete(id);
        return ResponseEntity.noContent().build();
    }
}
